Pages_for_logedin

1) in app/controllers/events_controller.rb hinzufügen:
before_action :require_signin, :except => [:index]

2)in app/controllers/registrations_controller.rb hinzufügen:
before_action :require_signin

3) in app/controllers/users_controller.rb hinzufügen:
before_action :require_signin, :except => [:new, :create]  

4) in app/controllers/application_controller.rb hinzufügen:
		def require_signin
			unless current_user
				redirect_to new_session_url, alert: "Please sign in first!!!"
			end
		end

5) in app/controllers/users_controller.rb hinzufügen:
before_action :require_correct_user, only: [:edit, :update, :destroy]

6) in app/controllers/users_controller.rb im private Bereich:
    def require_correct_user
      unless current_user == @user
        redirect_to users_url, alert: "No permission!"
      end
    end

7) in app/controllers/users_controller.rb in die create Methode hinzufügen:
session[:user_id] = @user.id

rails g migration AddAdminToUsers admin:boolean
rake db:migrate

8) in app/controllers/application_controller.rb hinzufügen:
  def require_admin
      unless current_user && current_user.admin?
        redirect_to root_url, alert: "You are no admin!"
      end
  end

9) in app/controllers/events_controller.rb hinzufügen:
before_action :require_admin, :except => [:index, :show]

10) in app/controllers/application_controller.rb hinzufügen:
  def current_user_admin?
      current_user && current_user.admin?
  end
  helper_method :current_user_admin?


Zusatz Aslan:
1) rails g migration MakeRegistrationAsAJoinTable
2) bei db/migrate/ID_make...rb hinzufügen:
  def up
  	Registration.delete_all
  	remove_column :registrations, :name
  	remove_column :registrations, :email
  	add_column :registrations, :user_id, :integer
  end
  def down
  	Registration.delete_all
  	add_column :registrations, :name, :string
  	add_column :registrations, :email, :string
  	add_column :registrations, :user_id
  end

3)
registration.rb hinzufügen:
belongs_to :user

user.rb hinzufügen:
has_many :registrations, :dependent => :destroy

4)
in der _form.html.erb Name und E-Mail entfernen.
und anpassen (siehe rails_app)

5)
in registration_controller.rb:
registration_params anpassen.. (siehe rails_app)

6) im registrations controller  in die create Methode folgendes hinzufügen:
@registration.user_id = current_user.id
#damit die beutzer-id mit pbergeben wird fpr die registrierung

7) app/models/registration.rb:
validates anpassen:
  validates :user_id, presence: true

8) in der show.html.erb & index.html.erb von registration:
.user. hinzufügen bei email und name


Zusatz Phil:
1.	migration erzeugen
		rails g migration MakeRegistrationAsAJoinTable

2. 	db/migrate/20170131112622_make_registration_as_a_join_table.rb
	def up
	  	Registration.delete_all
	  	remove_column :registrations, :name
	  	remove_column :registrations, :email
	  	add_column :registrations, :user_id, :integer
  	end

  	def down
	  	Registration.delete_all
	  	add_column :registrations, :name, :string
	  	add_column :registrations, :email, :string
	  	remove_column :registrations, :user_id, :integer
 	end
 		Beim migrate nimmt er die "up"-methode und beim Rollback die "down"-methode

3. 	app/models/registration.rb
		belongs_to :user
			hinzufügen für die 1:n beziehung

4.	app/models/users.rb
		has_many :registrations, :dependent => :destroy
			hinzufügen für die 1:n beziehung

5. 	app/views/registrations/_form.html.erb
		löschen der Eingabefelder name und email
			wird jetzt durch die 1:n beziehung mitgegeben. bzw durch den eingeloggten benutzer.

6. 	app/controllers/registrations_controller.rb
		def registration_params
      		params.require(:registration).permit(:how_heard, :user_id, :event_id)
    	end
    		anpassen. Rauslöschen von name und email und einfügen von user_id.

7.	app/controllers/registrations_controller.rb
		Zeile 30: @registration.user_id = current_user.id
			hinzufügen um bei einer registrierung die 1:n beziehung aufrecht zu erhalten

8. 	app/models/registration.rb
		validates :user_id, presence: true
  		validates :how_heard, inclusion: { in: HOW_HEARD_OPTIONS }
  			anpassen an die restlichen einstellungen

9. 	app/views/registrations/show.html.erb
		<p>
		  <strong>Name:</strong>
		  <%= @registration.user.name %>
		</p>

		<p>
		  <strong>Email:</strong>
		  <%= @registration.user.email %>
		</p>
			Anpassen der Darstellung

10.	app/views/registrations/index.html.erb
		<td><%= registration.user.name %></td>
        <td><%= registration.user.email %></td>
        	Anpassen der Darstellung