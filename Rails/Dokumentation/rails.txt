Der Befehl rails wird immer in der Basis der Applikations ausgeführt.
Das Programm rails ermöglicht auf der Console ausgeführt eine Reihe von Aktionen:

rails g controller events
	erstellt in der App einen Controller mit dem Namen events_controller.rb

rails d controller events
	löscht die Dateien die durch den Geenrator erstellt wurden

rails g model event name:string location:string price:decimal
	es werden Dateien zur Erstellung einer Tabelle erzeugt, mit dem Namen events und den Spalten: name, location, price


1) neuen ordner erstellen in Projekte mit 'movies'					

2) mit console in den ordner navigieren und 'rails new flix'		

3) unter vendor -> Gemfile den 'therubyracer' aktivieren			 #Wird mit der vorlage gemfile.lock verglichen. Gemfile gibt an welche er laden soll.

4) mit console in den ordner navigieren und 'bundle install'		

5) 'rails s' in console startet den Server							 #http://localhost:3000 	rails s p-3001 startet den server auf port 3001
																	 #http://localhost:3000/events zeigt die Routen an
6) unter config routes.rb get "movies => movies#index" hinzufügen

7) 'rails g controller movies'

8) unter controllers/movies_controller.rb hinzufügen:
	def index
		@movies = ["Iron Man", "Superman", "Spider-Man"]
	end

9) unter app/views/events/index.html.erb z.B.
	<h1>Movies</h1>
	<ul>
		<% @movies.each do |movies| %>
			<li><%= movies %></li>
		<% end %>
	</ul> 

	oder 

	<h1>Movies>
	<table>
		<tr>
			<td>Name</td>
		</tr>
		<% @movies.each do |movies|> %>
		<tr>
			<td><%= movies %></td>
		</tr>
	<% end %>

10) rails g model movie name:string				#erstellt eine DB
	in db/migrate/2016... 

11) rake db:migrate								#schaut nach ob in db/migrate/2016... die Tabellen existieren, wenn nicht werden diese erstellt

13) Movies.all (aus Modell Ordner die Klasse als Bezeichnung nehmen)	#zeigt an
	m = Movies.new		#lasbares und schreibbares atrribut
	m.name = "Weihnachten"
	m.date = "2016-12-24"
	m.save				#speichert das attribut

	oder

	Movies.create(name: "Weinen", datum: "2017-05-05")		#legt direkt einen Datensatz an

14) in app/controllers movies_controller.rb
	@movies = Movies.all hinzufügen
	
15) http://localhost:3000/movies öffnen


